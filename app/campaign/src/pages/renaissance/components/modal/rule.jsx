import Drawer from '@/components/drawer';
import { Swiper, SwiperSlide } from 'swiper/react';
import { Pagination } from 'swiper';
import moduleConf from '../../conf';
import Button from '../ui/button';
import 'swiper/css';
import 'swiper/css/pagination';
import { useState } from 'react';
import catPow from '@/images/event/cat-paw.png';

const slide1 = {
  name: 'We Scratch',
  picUrl: catPow,
  list: [
    {
      title: 'What is TBook？',
      texts: [
        '☄️TBook is an AI-powered modular incentive layer.',
        'TBook is granted by the TON Foundation to build the incentive infrastructure on TON.🎊',
      ],
    },
    {
      title: 'What is WISE Score？',
      texts: [
        '🧐WISE Score represents your on-chain reputation.',
        '🐈Generate WISE Score, showcase your contributions and impact on TON ! 🎮💎',
      ],
    },
    {
      title: 'Why We Scratch？',
      texts: [
        '🏅TBook is building an interactive attention incentive network, 🪄where the value is generated by community and owned by community.',
        'We define and capture the most valuable contributions with community and flagship projects.️‍️‍🔥️‍🔥️‍🔥',
        'Let’s scratch happy, earn more, and thrive together! 🚀💰',
      ],
    },
  ],
};
const slide2 = {
  name: 'How to Participate',
  picUrl: '',
  list: [
    {
      title: 'How to win💰',
      texts: [
        '🤑Open the TBook mini app everyday to get 10 free scratch cards.',
        'The first 5 are on your hands and others come every ten minutes.💥💥💥',
        'Get ready to scratch and win from a massive TPoints Prize Pool! 🧧',
      ],
    },
    {
      title: 'Becoming a TBook Ambassador🥇',
      texts: [
        'We will choose our ambassador from our angel users, that can be you!🔥🔥',
        'Want to be our Ambassador? Brush up your WISE Score, scratch more, feedback us on Social Media, or convince us in any other forms.🤑🏅',
      ],
    },
  ],
};
export default function Modal ({ open, onCancel }) {
  const [swiper, setSwiper] = useState(null);
  const [activeIndex, setActiveIndex] = useState(0);
  const handleClick = () => {
    if (swiper.isEnd) {
      onCancel();
    } else {
      swiper.slideTo(activeIndex + 1);
    }
  };
  return (
    <Drawer open={open} onCancel={onCancel} title={null}>
      <div
        className='renaissance_rule_pagination px-8 pt-8 pb-12 bg-white/10 text-white w-full'
        style={{
          '--swiper-theme-color': 'white',
          '--swiper-pagination-bullet-inactive-color': '#666',
        }}
      >
        <Swiper
          onSwiper={s => {
            setActiveIndex(0);
            setSwiper(s);
          }}
          autoHeight
          modules={[Pagination]}
          pagination={{
            clickable: true,
          }}
          onSlideChange={s => {
            setActiveIndex(swiper.activeIndex);
          }}
        >
          <SwiperSlide>
            <div className='space-y-5 mb-8'>
              <h2 className='text-3xl font-syne text-center'>{slide1.name}</h2>
              <div className='space-y-5 text-sm'>
                {slide1.list.map(s => {
                  return (
                    <div key={s.title} className='space-y-1 text-xs'>
                      <h2 className='text-white/40'>{s.title}</h2>
                      {s.texts.map((t, i) => {
                        return (
                          <p key={i} className='text-white'>
                            {t}
                          </p>
                        );
                      })}
                    </div>
                  );
                })}
              </div>
              <div className='py-6'>
                <img src={slide1.picUrl} className='w-full' />
              </div>
            </div>
          </SwiperSlide>
          <SwiperSlide>
            <div className='space-y-5 mb-8'>
              <h2 className='text-3xl font-syne text-center'>{slide2.name}</h2>
              <div className='space-y-5 text-sm'>
                {slide2.list.map(s => {
                  return (
                    <div key={s.title} className='space-y-1 text-xs'>
                      <h2 className='text-white/40'>{s.title}</h2>
                      {s.texts.map((t, i) => {
                        return (
                          <p key={i} className='text-white'>
                            {t}
                          </p>
                        );
                      })}
                    </div>
                  );
                })}

                <div className='text-xs grid grid-cols-4'>
                  {moduleConf.rewards.list.map(v => {
                    return (
                      <div
                        key={v.name}
                        className='flex flex-col items-center gap-y-3'
                      >
                        <img src={v.picUrl} className='size-[50px]' />
                        <p className='text-[#FFDFA2]/60'>{v.name}</p>
                      </div>
                    );
                  })}
                </div>
              </div>
            </div>
          </SwiperSlide>
        </Swiper>

        <Button className='w-full text-sm font-syne' onClick={handleClick}>
          {activeIndex !== 1 ? `Next` : `Let's get start`}
        </Button>
      </div>
    </Drawer>
  );
}
